* Ideas

	Here are a few ideas of tools, classes and projects that you
	could start. More are forthcoming.

<a name="runtime">
** Runtime

	We need a verifier that can be run on an executable (assembly)
	and tells whether the metadata for the executable is correct
	or not.  It should report any anomalies.

	For a list of anomalies in assemblies, check the various assertions
	that are described on the ECMA documentation. 

	This will help test our generated executables and can be also
	used as an external verifier.

<a name="classes">
** Classes

	<ul>
		* Implement a JXTA protocol implementation:
		<a href="http://www.jxta.org">http://www.jxta.org</a>

		* Implement a Mail API, similar to Camel or JavaMail (Camel has
		  significant architecture features that are required on a real
		  mailer).

		  You can check the current C 
		<a href="http://cvs.gnome.org/bonsai/rview.cgi?dir=evolution%2Fcamel">
		Camel implementation</a>.

		* Interfacing to Multimedia systems.  You might want
		  to look into the Quicktime API.  I know <a
		  href="mailto:vladimir@ximian.com">Vladimir</a> has
		  researched the problem before 
	</ul>

<a name="projects">
** Projects

	<ul>
		* Implement an xmlStorageSystem for the CLI:
		<a href="http://www.soapware.org/xmlStorageSystem">
		http://www.soapware.org/xmlStorageSystem</a>

		* Build a CORBA interoperability engine for the CLR.
		  You do not need to do all of the work, just talking
		  the protocol will get us a long way (<a
		  href="http://www.omg.org">The OMG site</a> has the CORBA specs).

	</ul>
